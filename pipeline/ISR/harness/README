README  last modified: 27 April 2010 RAA
-------

=============================================================================
datarel  ISR/harness example
=============================================================================

In this example we run the ISR pipeline, launching it at the
level of pex_harness via the  launchPipeline.py script.

To run here at the pex_harness level, we perform by hand a couple of tasks
that ctrl_orca provides during "production" runs.

We link the input directory:
% ln -s /lsst/DC3/data/obstest/ImSim input

update the input and output directory pathnames in 000-getajob.paf

and make the output directories :
% mkdir output update scratch work

------------------------------------------------------
ImSim Processing
------------------------------------------------------
The ImSim pipeline can be then started via :
%  launchPipeline.py  master.paf Run2 ISR -v | & tee ISR.log


The pipeline will block and wait for an incoming data event.
Provide this event with the trigger script: sendevent.py
When pipeline output displays: "Told JobOffice, I'm ready!",
capture the Origiator number for use in '-o' option to the sendevent command.

For, example, the following command corresponds to the ImSim dataset linked
above. BEWARE: as time passes, the ImSim dataset will morph.

% sendevent.py -r Run2 -n ISR -b lsst8 assign IsrJob -O \
"postISR visit=85751839 snap=0 raft=2,3 sensor=1,1 channel=0,0" \
"raw visit=85751839 snap=0 raft=2,3 sensor=1,1 channel=0,0" \
-o    <fill in pipeline originator # provided by now waiting>

NOTE: can not break the long line right before '-O' --must be after or
get multiple dataset complaint. Also, can not break within quoted string or
will get embedded newline (which then is also interpreted as multiple output
datasets).

Note: contrary to doco, '-o' at end of command is OK; easier for cut-n-paste.

------------------------------------------------------
CFHT-LS  Processing
------------------------------------------------------

Win 1%  launchPipeline.py  cfhtlsMaster.paf Run2 ISR -v | & tee IsrRun2.log

Win 2% sendevent.py -r Run2 -n ISR -b lsst8 assign IsrJob -O \
"postISR field="D3" visit=788965 ccd=6 amp=0" \
"raw field="D3" visit=788965 ccd=6 amp=0" \
-o    <fill in pipeline originator # provided by now waiting>


Win 1%  launchPipeline.py  cfhtlsMaster.paf Run3 ISR -v | & tee IsrRun3.log

Win 2% sendevent.py -r Run3 -n ISR -b lsst8 assign IsrJob -O \
"postISR field="D3" visit=788965 ccd=6 amp=1" \
"raw field="D3" visit=788965 ccd=6 amp=1" \
-o    <fill in pipeline originator # provided by now waiting>

