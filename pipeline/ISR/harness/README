
=============================================================================
datarel  ISR/harness example
=============================================================================

In this example we run the ISR pipeline, launching it at the 
level of pex_harness via the  launchPipeline.py script. 

To run here at the pex_harness level, we perform by hand a couple of tasks 
that ctrl_orca provides during "production" runs. 

1) define the input directory in the 010-Input.paf policy:
	input: /lsst/sims/ImSim_data

2) make the other output  directories : 

% cd ....datarel/pipeline/harness/
% mkdir output work scratch log

3) ensure that DMS/obs/lsstSim is setup as obs_lsstSim.  Since it does not
   have its first tag....this must be done by hand.

-------------------------------------------------------------------
Since the camera geom is not ready for the butler...the camera geometry 
   is placed on the clipboard a temporary stage: 020-makeCameraGeomStage
----------------------------------------------------------------------


The pipeline can be then started via : 

% launchPipeline.py master.paf test_1 ISR -v

The pipeline will block and wait for an incoming data event.
Provide this event with the trigger script :

% python triggerISREventTransmitter.py 

This script will send events of topic "triggerISREvent" that contain a keyword
to identify the data set (uncalibratedImage) to be processed, for example,

"inputPathName" => "871034p_1_MI"

The Output Stage is configured to produce a single calibrated output file :

% ls -l output
........Fill in the sample ls........

