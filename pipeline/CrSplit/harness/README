

=============================================================================
datarel  CrSplit/harness example
=============================================================================

In this example we run the CrSplit pipeline, launching it at the
level of pex_harness via the  launchPipeline.py script.

To run here at the pex_harness level, we perform by hand a couple of tasks
that ctrl_orca provides during "production" runs.

We link the input directory:

% ln -s /lsst/sims/ImSim_data input

and make the output directory :

% mkdir output update scratch work

The pipeline can be then started via :

%  launchPipeline.py  master.paf Run2 CrSplit -v | & tee CrSplit.log

The pipeline will block and wait for an incoming data event.
Provide this event with the trigger script: sendevent.py

This script will send events  and identify the exposures to be processed, for
example:

sendevent.py -r Run2 -n CrSplit -b lsst8 -O \
"postISRCCD visit=85751839 sensor=S:1,1 raft=R:2,3" assign CrSplitJob \
"postISRCCD visit=85751839 sensor=S:1,1 raft=R:2,3 snap=0" \
"postISRCCD visit=85751839 sensor=S:1,1 raft=R:2,3 snap=1" \
-o    <fill in pipeline originator number>
 
..... fill in the originator number provided when you started the pipeline.
